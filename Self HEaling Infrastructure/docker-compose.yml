version: '3.8'

services:
  # Monitoring Stack
  prometheus:
    image: prom/prometheus:v2.40.0
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules:/etc/prometheus/rules
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - sentinel-network

  grafana:
    image: grafana/grafana:9.3.2
    container_name: grafana
    volumes:
      - ./prometheus/dashboards:/var/lib/grafana/dashboards
      - ./prometheus/grafana-provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=sentinel123
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      - prometheus
    networks:
      - sentinel-network

  alertmanager:
    image: prom/alertmanager:v0.24.0
    container_name: alertmanager
    volumes:
      - ./prometheus/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    ports:
      - "9093:9093"
    restart: unless-stopped
    networks:
      - sentinel-network

  # Sentinel Components
  anomaly-detector:
    build:
      context: .
      dockerfile: ./docker/anomaly-detector.Dockerfile
    container_name: anomaly-detector
    volumes:
      - ./config:/app/config
      - ./python:/app/python
    environment:
      - PROMETHEUS_URL=http://prometheus:9090
      - LOG_LEVEL=INFO
    restart: unless-stopped
    depends_on:
      - prometheus
    networks:
      - sentinel-network

  remediation-orchestrator:
    build:
      context: .
      dockerfile: ./docker/remediation-orchestrator.Dockerfile
    container_name: remediation-orchestrator
    volumes:
      - ./config:/app/config
      - ./python:/app/python
      - ./ansible:/app/ansible
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - PROMETHEUS_URL=http://prometheus:9090
      - KUBERNETES_API_URL=http://localhost:8080
      - LOG_LEVEL=INFO
    restart: unless-stopped
    depends_on:
      - prometheus
      - anomaly-detector
    networks:
      - sentinel-network

  sentinel-api:
    build:
      context: .
      dockerfile: ./docker/sentinel-api.Dockerfile
    container_name: sentinel-api
    volumes:
      - ./config:/app/config
      - ./api:/app/api
    ports:
      - "8080:8080"
    environment:
      - PROMETHEUS_URL=http://prometheus:9090
      - ANOMALY_DETECTOR_URL=http://anomaly-detector:5000
      - REMEDIATION_ORCHESTRATOR_URL=http://remediation-orchestrator:5000
      - LOG_LEVEL=INFO
    restart: unless-stopped
    depends_on:
      - prometheus
      - anomaly-detector
      - remediation-orchestrator
    networks:
      - sentinel-network

  # Demo Application for Testing
  demo-app:
    image: nginx:1.21
    container_name: demo-app
    volumes:
      - ./demo/nginx.conf:/etc/nginx/nginx.conf
      - ./demo/html:/usr/share/nginx/html
    ports:
      - "8000:80"
    restart: unless-stopped
    networks:
      - sentinel-network

  # Node Exporter for Host Metrics
  node-exporter:
    image: prom/node-exporter:v1.3.1
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    restart: unless-stopped
    networks:
      - sentinel-network

networks:
  sentinel-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data: